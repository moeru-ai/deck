---
import { Code, TabItem, Tabs } from '@astrojs/starlight/components'
import { Markdown } from '@astropub/md'
import { type Card, exportToJSON } from '@moeru-ai/ccc'

import FirstMes from './first-mes.astro'
import MessageExample from './message-example.astro'

interface Props {
  character: string
  json: Card
}

const { character, json } = Astro.props

const card = exportToJSON(json)
---

<p class="hidden" data-name={character} id="character-card-raw">{JSON.stringify(json)}</p>

<Markdown.Inline of={json.notes ? `> ${json.notes.split('\n').join('\n> ')}` : ''} />

<Markdown.Inline of="## Downloads" />

<script>
import { exportToJSON, exportToPNGBase64 } from '@moeru-ai/ccc'

const cardRAW = document.getElementById('character-card-raw')!
const card = cardRAW.textContent!
const character = cardRAW.getAttribute('data-name')

const buttonJSON = document.getElementById('download-json')! as HTMLButtonElement
const buttonPNG = document.getElementById('download-png') as HTMLButtonElement | null

buttonJSON.addEventListener('click', () => {
  const a = document.createElement('a')
  a.href = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(exportToJSON(JSON.parse(card))))}`
  a.download = `${character}.json`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
})
buttonJSON.disabled = false

if (buttonPNG) {
  const img = document.getElementById('character-avatar')! as HTMLImageElement

  const canvas = document.createElement('canvas')
  canvas.width = img.naturalWidth
  canvas.height = img.naturalHeight

  const ctx = canvas.getContext('2d')!
  ctx.drawImage(img, 0, 0)

  buttonPNG.addEventListener('click', () => {
    const a = document.createElement('a')
    a.href = exportToPNGBase64(JSON.parse(card), canvas.toDataURL('image/png'))
    a.download = `${character}.png`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
  })
  buttonPNG.disabled = false
}
</script>

<div class="join">
  {json.metadata?.avatar && <button class="btn btn-accent join-item border-none" disabled id="download-png">PNG</button>}
  <button class="btn btn-accent join-item border-none !mt-0" disabled id="download-json">JSON</button>
</div>

<Markdown.Inline of="## Definitions" />

<Tabs>
  {json.description && <TabItem label="Description"><Markdown of={json.description} /></TabItem>}
  {card.data.first_mes && <TabItem label="First Message"><FirstMes {json} /></TabItem>}
  {card.data.alternate_greetings.length > 0 && <TabItem label="Alternate Greetings"><Markdown of={card.data.alternate_greetings.join('\n\n---\n\n')} /></TabItem>}
  {json.messageExample && <TabItem label="Example Messages"><MessageExample {json} /></TabItem>}
  {/* TODO: personality, character_book, system_prompt */}
</Tabs>

<Markdown.Inline of="## Raw" />

<details>
  <summary>{character}.json (length: {JSON.stringify(card).length})</summary>
  <Code code={JSON.stringify(card, null, 2)} lang="json" />
</details>
