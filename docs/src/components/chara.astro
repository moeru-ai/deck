---
import { Code, LinkButton, TabItem, Tabs } from '@astrojs/starlight/components'
import { Markdown } from '@astropub/md'
import { type Card, exportToJSON, exportToPNGBase64 } from '@moeru-ai/ccc'
import { readFile } from 'node:fs/promises'

import FirstMes from './first-mes.astro'
import MessageExample from './message-example.astro'

interface Props {
  character: string
  json: Card
}

const { character, json } = Astro.props

const card = exportToJSON(json)

const png = json.metadata?.avatar
  // eslint-disable-next-line antfu/no-top-level-await
  ? await readFile(`./public${json.metadata.avatar}`, { encoding: 'base64' })
  : undefined
---

<Markdown.Inline of={json.notes ? `> ${json.notes.split('\n').join('\n> ')}` : ''} />

<Markdown.Inline of="## Downloads" />

{png && (
<LinkButton
  download={`${character}.png`}
  href={`${exportToPNGBase64(json, `data:image/png;base64,${png}`)}`}
>
  PNG
</LinkButton>
)}
<LinkButton
  download={`${character}.json`}
  href={`data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(card))}`}
  variant={png ? 'secondary' : 'primary'}
>
  JSON
</LinkButton>

<Markdown.Inline of="## Definitions" />

<Tabs>
  {json.description && <TabItem label="Description"><Markdown of={json.description} /></TabItem>}
  {card.data.first_mes && <TabItem label="First Message"><FirstMes {json} /></TabItem>}
  {card.data.alternate_greetings.length > 0 && <TabItem label="Alternate Greetings"><Markdown of={card.data.alternate_greetings.join('\n\n---\n\n')} /></TabItem>}
  {json.messageExample && <TabItem label="Example Messages"><MessageExample {json} /></TabItem>}
  {/* TODO: personality, character_book, system_prompt */}
</Tabs>

<Markdown.Inline of="## Raw" />

<details>
  <summary>{character}.json (length: {JSON.stringify(card).length})</summary>
  <Code code={JSON.stringify(card, null, 2)} lang="json" />
</details>
